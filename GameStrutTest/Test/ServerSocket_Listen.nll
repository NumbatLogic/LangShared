namespace NumbatLogic
{
	class ServerSocket_Listen
	{
        public static void Run()
		{

			ServerSocket* pServerSocket = own new ServerSocket();
			pServerSocket.Start(9876);

			ClientSocket* pClientSocket = own new ClientSocket();
			pClientSocket.Connect("localhost", 9876);

			pServerSocket.Update();
			pClientSocket.Update();

			ClientSocket pServerClientSocket = pServerSocket.Accept();
			Assert::Plz(pServerClientSocket != null);

			Blob* pSendBlob = own new Blob(true);
			BlobView pSendBlobView = pSendBlob.GetBlobView();
			pSendBlobView.PackInt32(619);
			Assert::Plz(pServerSocket.Send(pSendBlob, 0)); //pServerClientSocket.GetClientId()

			while (pServerSocket.Pending() || pClientSocket.Pending())
			{
				pServerSocket.Update();
				pClientSocket.Update();
			}

			Blob* pReceiveBlob = own pClientSocket.Receive();
			Assert::Plz(pReceiveBlob != null);
			BlobView pReceiveBlobView = pReceiveBlob.GetBlobView();
			int nRecievedInt = pReceiveBlobView.UnpackInt32();
			Assert::Plz(nRecievedInt == 619);


			pClientSocket.Disconnect();
			pServerSocket.Stop();
			
			//World* pWorld = own new World();
			//Assert::Plz(pWorld != null);
		}
	}
}